import asyncio
from playwright.async_api import async_playwright
import random
import json
import os
import subprocess
from urllib.parse import urlparse, parse_qs

COOKIES_FILE = "cookies.json"
YOUTUBE_LINKS_FILE = "youtube_links.txt"
ACCENT_CODES = {
    "US": "us",
    "UK": "uk",
    "AUS": "au",
    "CAN": "ca",
    "IE": "ie",
    "SCO": "gb-sco",
    "NZ": "nz"
}

def extract_info_and_download(url, duration, output_file):
    parsed_url = urlparse(url)
    query = parse_qs(parsed_url.query)

    video_id = query.get('v', [None])[0]
    if not video_id:
        raise ValueError(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä 'v' –≤ —Å—Å—ã–ª–∫–µ: {url}")

    start_time = int(query.get('time_continue', [0])[0])
    end_time = start_time + duration

    normal_url = f"https://www.youtube.com/watch?v={video_id}"
    print(f"‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º {output_file} —Å {start_time} –¥–æ {end_time} —Å–µ–∫")

    command = [
        "yt-dlp",
        "--quiet", "--no-warnings",
        "--download-sections", f"*{start_time}-{end_time}",
        normal_url,
        "-o", output_file
    ]

    subprocess.run(command, check=True)

def random_user_agent():
    agents = [
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 13_3_1) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36",
    ]
    return random.choice(agents)

async def main():
    word = input("üî§ –í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, hello): ").strip()
    print("üéôÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–∫—Ü–µ–Ω—Ç—ã: US, UK, AUS, CAN, IE, SCO, NZ")
    accent_input = input("üåç –í–≤–µ–¥–∏—Ç–µ –∞–∫—Ü–µ–Ω—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, US): ").strip().upper()

    if accent_input not in ACCENT_CODES:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç: {accent_input}")
        return

    accent = ACCENT_CODES[accent_input]
    url = f"https://youglish.com/pronounce/{word}/english/{accent}"

    folder_name = word.lower()
    os.makedirs(folder_name, exist_ok=True)

    async with async_playwright() as p:
        browser = await p.chromium.launch(headless=False)
        context = await browser.new_context(user_agent=random_user_agent())

        if os.path.exists(COOKIES_FILE):
            print("üíæ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ cookies...")
            cookies = json.load(open(COOKIES_FILE, "r"))
            await context.add_cookies(cookies)

        page = await context.new_page()
        await page.goto(url)

        try:
            print("üîò –ò—â–µ–º –∫–Ω–æ–ø–∫—É —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ cookies...")
            await page.wait_for_selector(
                "body > div.fc-consent-root button.fc-cta-consent", timeout=5000
            )
            await page.click("body > div.fc-consent-root button.fc-cta-consent")
            print("‚úÖ Cookies –ø—Ä–∏–Ω—è—Ç—ã.")
        except:
            print("‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É–∂–µ –ø—Ä–∏–Ω—è—Ç–∞.")

        cookies = await context.cookies()
        json.dump(cookies, open(COOKIES_FILE, "w"), indent=2)
        print("üíæ –ö—É–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

        youtube_links = []

        for i in range(5):
            print(f"\nüîé –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä ‚Ññ{i+1}...")

            selector = '#all_actions > div:nth-child(1) > div:nth-child(2) > div:nth-child(1)'
            await page.wait_for_selector(selector, timeout=10000)

            container = await page.query_selector(selector)
            if not container:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç —Å YouTube —Å—Å—ã–ª–∫–æ–π.")
                break

            link = await container.query_selector('a')
            if not link:
                print("‚ùå –í —ç–ª–µ–º–µ–Ω—Ç–µ –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ <a>.")
                break

            async with context.expect_page() as new_page_info:
                await link.click()

            new_page = await new_page_info.value
            await new_page.wait_for_load_state()
            youtube_url = new_page.url
            print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ YouTube: {youtube_url}")
            youtube_links.append(youtube_url)
            await new_page.close()

            if i < 4:
                print("‚û°Ô∏è –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É 'Next' –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞...")
                try:
                    await page.wait_for_selector('#b_next', timeout=5000)
                    await page.click('#b_next')
                    await asyncio.sleep(2)
                except Exception as e:
                    print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É 'Next': {e}")
                    break

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏
        with open(YOUTUBE_LINKS_FILE, "a") as f:
            for link in youtube_links:
                f.write(link + "\n")

        print(f"\nüíæ –í—Å–µ —Å—Å—ã–ª–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {YOUTUBE_LINKS_FILE}")

        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –≤–∏–¥–µ–æ
        print("\nüì• –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤ YouTube...")
        for idx, link in enumerate(youtube_links, start=1):
            output_path = os.path.join(folder_name, f"{word.lower()}{idx}.mp4")
            try:
                extract_info_and_download(link, duration=8, output_file=output_path)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {link}: {e}")

        input("\n‚è∏Ô∏è –ù–∞–∂–º–∏ Enter –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")
        await browser.close()

if __name__ == "__main__":
    asyncio.run(main())
